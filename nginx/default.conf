# Define an 'upstream' for the Django backend.
# This sets a reference named 'backend' pointing to the actual Django server.
upstream backend {
  server backend:8000;  # 'backend:8000' is the address of the Django server.
}

# Define a server block. This is the basic unit of configuration in Nginx.
server {
  listen 80;  # Listen on port 80 (default HTTP port).
  
  # Location block for handling API requests.
  # Any request to /api/ will be proxied to the Django backend.
  location /api/ {
    proxy_pass http://backend;  # Proxy the request to the 'backend' upstream defined earlier.
  }

  # Location block for handling Django admin interface.
  # Requests to /admin/ are also proxied to the Django backend.
  location /admin/ {
    proxy_pass http://backend;  # Proxy to the 'backend' upstream.
  }
 
  # Location block for serving static files.
  # Handles requests to /developer/static/ and serves files from the /static/ directory.
  location /developer/static/ {
    alias  /static/;  # 'alias' specifies the directory on the filesystem from which to serve files.
                      # Unlike 'root', 'alias' doesn't append the location part to the path.
  }

  # Location block for serving the React application.
  # This is the default handler for any request that doesn't match the above locations.
  location / {
    root /var/www/frontend;  # The 'root' directive sets the root directory for requests.
                             # Here, it points to where the React app is located.
    
    # The 'try_files' directive checks for the existence of files in order,
    # and serves the first one it finds. If none are found, it falls back to /index.html.
    # This is useful for single-page applications (like those built with React) to handle routing.
    try_files $uri $uri/ /index.html;
  }
}
